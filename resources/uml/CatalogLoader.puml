@startuml

set namespaceSeparator \\

namespace Domain\\Core\\Interfaces{
	abstract class ParseResult

	interface ParserInterface{
		+parse(): ParseResult
	}

	ParserInterface -> ParseResult: use
}

namespace Domain\\Catalog\\Interfaces{
	interface ProductsRepositoryInterface{
		+all(): Products
	}
}

namespace Domain\\CatalogLoader{
	abstract class AbstractWebSiteParser {
    	+parse()
    }

    AbstractWebSiteParser --|> Domain\\Core\\Interfaces\\ParserInterface
}

namespace Domain\\CatalogLoader\\Products{

	abstract class AbstractWebSiteProductsRepository{
		+__construct(AbstractWebSiteParser $parser)
	}

	AbstractWebSiteProductsRepository -up-|> Domain\\Catalog\\Interfaces\\ProductsRepositoryInterface
	AbstractWebSiteProductsRepository -right-* AbstractWebSiteParser
}

namespace Infrastructure\\CatalogLoader\\WebSites\\ZenitProfi{
	class ZenitProfiProduct
	class ZenitProfiCategory
	class ZenitProfiWebSiteParser{
	}

	ZenitProfiWebSiteParser --|> Domain\\CatalogLoader\\AbstractWebSiteParser
}

@enduml